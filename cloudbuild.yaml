steps:
  # Build the API image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "--target", "prod", "-t", "${_API_IMAGE}", "./sourcecode/api"]

  # Build the Frontend image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "--target", "prod", "-t", "${_FRONTEND_IMAGE}", "./sourcecode/frontend"]

  # Push the API image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "${_API_IMAGE}"]

  # Push the Frontend image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "${_FRONTEND_IMAGE}"]

  - name: gcr.io/cloud-builders/kubectl
    entrypoint: "/bin/bash"
    args:
      - -c
      - /builder/kubectl.bash -n web get configmap/$_HELM_CONFIG_NAME -o jsonpath="{.data.values}" > /workspace/values.yaml
    env:
      - CLOUDSDK_COMPUTE_REGION=$_GCP_REGION
      - CLOUDSDK_CONTAINER_CLUSTER=$_GKE_CLUSTER
      - KUBECONFIG=/workspace/.kube/config

  - name: gcr.io/cloud-builders/kubectl
    args:
      - cluster-info
    env:
      - CLOUDSDK_COMPUTE_REGION=$_GCP_REGION
      - CLOUDSDK_CONTAINER_CLUSTER=$_GKE_CLUSTER
      - KUBECONFIG=/workspace/.kube/config

  # Deploy with Helm
  - name: gcr.io/my-second-brain-common/helm
    args:
      - upgrade
      - -i
      - mysecondbrain
      - ./chart
      - --create-namespace
      - -n
      - web
      - -f
      - /workspace/values.yaml
      - --set
      - api.image=$_API_IMAGE
      - --set
      - frontend.image=$_FRONTEND_IMAGE
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLER_NAMESPACE=kube-system

images:
  - gcr.io/$PROJECT_ID/mysecondbrain-api:$COMMIT_SHA
  - gcr.io/$PROJECT_ID/mysecondbrain-frontend:$COMMIT_SHA

substitutions:
  _API_IMAGE: gcr.io/${PROJECT_ID}/mysecondbrain-api:${COMMIT_SHA}
  _FRONTEND_IMAGE: gcr.io/${PROJECT_ID}/mysecondbrain-frontend:${COMMIT_SHA}

  _GCP_REGION: the-region
  _GKE_CLUSTER: name-of-gke-cluster

  _HELM_CONFIG_NAME: the-name-of-the-helm-configmap
  _HELM_NAMESPACE: the-name-of-the-helm-namespace

#  Following variables are for doing the database migration
  _CONFIG_DB_DATABASE: database
  _CONFIG_DB_USER: user
  _CONFIG_DB_PASSWORD: password
  _CONFIG_DB_SOCKET_PATH: socket/path
  _INSTANCE_CONNECTION_NAME: connection_name

options:
  dynamic_substitutions: true
  logging: CLOUD_LOGGING_ONLY